{
  "extends": "./tsconfig.base",
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      // The `plugins` directory is used to store created plugins.
      // Try `npm run setup` or `yarn setup` to create a new plugin.
      "koishi-plugin-*": [
        "external/*/src",
        "external/*/packages/core/src",
        "packages/*/src",
        "plugins/*/src",
      ],

      // Below are links for koishi internal packages.
      // You need them only if you are developing koishi itself.
      "@koishijs/plugin-adapter-*": ["external/koishi/plugins/adapter/*/src"],
      "@koishijs/plugin-database-*": ["external/koishi/plugins/database/*/src"],
      "@koishijs/plugin-*": [
        "external/console/packages/*/src",
        "external/koishi/plugins/a11y/*/src",
        "external/koishi/plugins/common/*/src",
        "external/koishi/plugins/*/src",
      ],
      "@koishijs/*": [
        "external/console/packages/*/src",
        "external/koishi/packages/*/src",
        "external/*/packages/core/src",
      ],
      "@minatojs/driver-*": ["external/minato/packages/*/src"],
      "@minatojs/*": ["external/minato/packages/*/src"],
      "@satorijs/adapter-*": ["external/satori/adapters/*/src"],
      "@satorijs/*": ["external/satori/packages/*/src"],
      "koishi": ["external/koishi/packages/koishi/src"],
      "minato": ["external/minato/packages/minato/src"],

      // If you are publishing scoped plugins, just uncomment the next line
      // and change `@scope` to your npm account or organization name:
      // "@scope/koishi-plugin-*": ["plugins/*/src"],

      // Many monorepo projects have a `packages` directory.
      // You can use it if you are developing non-plugin packages.
      // Even if you don't, do not delete this line,
      // as it bypasses a bug in tsconfig-path/register.
      // See: https://github.com/dividab/tsconfig-paths/issues/209
      "*": ["packages/*/src"],
    },
  },
  "files": [],
}
